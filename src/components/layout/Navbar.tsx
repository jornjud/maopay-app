// src/components/layout/Navbar.tsx
"use client";

import { useEffect } from 'react'; // 1. ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect
import Link from "next/link";
import { useCartStore } from "@/store/cartStore";
import { ShoppingCart, LogOut, User as UserIcon, LayoutDashboard } from "lucide-react";
import { useAuth } from "@/components/auth/AuthProvider";
import { auth, app } from "@/lib/firebase"; // 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° app ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
import { Button } from "@/components/ui/button";
import { NotificationBell } from './NotificationBell';

// --- 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° imports ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Messaging ---
import { getMessaging, onMessage } from 'firebase/messaging';
import { useNotificationStore } from '@/store/notificationStore';

export const Navbar = () => {
  const items = useCartStore((state) => state.items);
  const totalItems = items.reduce((total, item) => total + item.quantity, 0);
  const { user, loading } = useAuth();
  const { addNotification } = useNotificationStore(); // 4. ‡∏î‡∏∂‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏°‡∏≤

  // --- 5. ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏±‡∏Å‡∏ü‡∏±‡∏á Notification ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞! ---
  useEffect(() => {
    // ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πá‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    if (user && typeof window !== 'undefined' && 'serviceWorker' in navigator) {
      try {
        const messaging = getMessaging(app);

        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ "‡∏´‡∏π‡∏ó‡∏¥‡∏û‡∏¢‡πå" ‡∏î‡∏±‡∏Å‡∏ü‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        const unsubscribe = onMessage(messaging, (payload) => {
          console.log('‚úÖ NAV-BAR: Foreground message received!', payload);

          const notiTitle = payload.notification?.title || '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà';
          const notiBody = payload.notification?.body || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤';

          // ‡∏¢‡∏±‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô Store! (‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡∏£‡∏∞‡∏î‡∏¥‡πà‡∏á‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏≠‡∏á)
          addNotification({
            message: `${notiTitle}: ${notiBody}`,
            role: 'all',
          });
        });

        // Cleanup function
        return () => {
          console.log("Unsubscribing from foreground messages in Navbar.");
          unsubscribe();
        };
      } catch (error) {
        console.error("Failed to initialize foreground messaging in Navbar:", error);
      }
    }
  }, [user, addNotification]); // ‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà user ‡∏´‡∏£‡∏∑‡∏≠ addNotification ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  const handleLogout = async () => {
    try {
      await auth.signOut();
      alert("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    } catch (error) {
      console.error("Logout Error:", error);
    }
  };

  return (
    <header className="bg-white shadow-md sticky top-0 z-50">
      <nav className="container mx-auto px-6 py-4 flex justify-between items-center">
        <Link href="/" className="text-2xl font-bold text-red-600">MAOPAY üõµ</Link>
        <div className="flex items-center space-x-2 md:space-x-4 text-gray-700">
          <Link href="/stores" className="hover:text-red-600">‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</Link>
          
          {user && (
            <>
              <Link href="/stores/register" passHref legacyBehavior>
                <Button variant="ghost" className="hidden sm:inline-flex">üè™ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</Button>
              </Link>
              <Link href="/riders/register" passHref legacyBehavior>
                <Button variant="ghost" className="hidden sm:inline-flex">üõµ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏£‡πÄ‡∏î‡∏≠‡∏£‡πå</Button>
              </Link>
            </>
          )}

          <Link href="/cart" className="relative">
            <ShoppingCart className="h-6 w-6 hover:text-red-600" />
            {totalItems > 0 && (
              <span className="absolute -top-2 -right-2 bg-red-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">
                {totalItems}
              </span>
            )}
          </Link>
          
          {loading ? (
            <div className="h-10 w-24 bg-gray-200 rounded-full animate-pulse"></div>
          ) : user ? (
            <div className="flex items-center space-x-2 md:space-4">
               <NotificationBell />
               <Link href="/dashboard" className="hover:text-red-600" title="‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î">
                  <LayoutDashboard className="h-6 w-6" />
              </Link>
			        <Link href="/history" className="hover:text-red-600" title="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="h-6 w-6"><path d="M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"/><path d="M12 8v4l2 2"/></svg>
              </Link>
               <Link href="/profile" className="hover:text-red-600" title="‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå">
                  <UserIcon className="h-6 w-6" />
              </Link>
              <Button onClick={handleLogout} variant="ghost" size="icon" title="‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö">
                <LogOut className="h-6 w-6 text-red-600" />
              </Button>
            </div>
          ) : (
            <Link href="/login" passHref legacyBehavior>
                 <Button className="bg-red-600 text-white px-4 py-2 rounded-full hover:bg-red-700">
                    ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
                </Button>
            </Link>
          )}
        </div>
      </nav>
    </header>
  );
};
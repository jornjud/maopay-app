import { NextResponse } from 'next/server';
import { db } from '@/lib/firebase';
import { collection, addDoc, serverTimestamp, doc, getDoc } from 'firebase/firestore';
import { CartItem } from '@/store/cartStore';

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏ó‡∏µ‡πà Telegram
async function sendTelegramMessage(chatId: string, text: string) {
    const token = process.env.TELEGRAM_BOT_TOKEN;
    if (!token || !chatId) {
        console.error("Telegram token or Chat ID is missing.");
        return;
    }
    const url = `https://api.telegram.org/bot${token}/sendMessage`;
    
    try {
        await fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: text,
                parse_mode: 'Markdown',
            }),
        });
    } catch (error) {
        console.error("Failed to send Telegram message:", error);
    }
}

// Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö POST request
export async function POST(request: Request) {
    try {
        const body = await request.json();
        const { items, totalPrice, storeId } = body;

        if (!items || items.length === 0 || !totalPrice || !storeId) {
            return NextResponse.json({ error: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô' }, { status: 400 });
        }

        // 1. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡πÉ‡∏ô collection 'orders'
        const newOrderRef = await addDoc(collection(db, "orders"), {
            storeId: storeId,
            items: items,
            totalPrice: totalPrice,
            status: 'pending', // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡∏£‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
            createdAt: serverTimestamp(), // ‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
        });

        // 2. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤ Telegram Chat ID
        const storeDocRef = doc(db, "stores", storeId);
        const storeDocSnap = await getDoc(storeDocRef);
        
        if (!storeDocSnap.exists() || !storeDocSnap.data()?.telegram_chat_id) {
             console.error(`Store ${storeId} not found or has no telegram_chat_id.`);
             // ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
             return NextResponse.json({ message: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏î‡πâ', orderId: newOrderRef.id });
        }
        
        const storeData = storeDocSnap.data();
        const chatId = storeData.telegram_chat_id;

        // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ Telegram
        let message = `üîî *‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤!*\n\n`;
        message += `*‡∏£‡πâ‡∏≤‡∏ô:* ${storeData.name}\n`;
        message += `*ID ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå:* \`${newOrderRef.id}\`\n\n`;
        message += `*‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£:*\n`;
        items.forEach((item: CartItem) => {
            message += `- ${item.name} (x${item.quantity}) = ${item.price * item.quantity} ‡∏ö‡∏≤‡∏ó\n`;
        });
        message += `\n*‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:* *${totalPrice} ‡∏ö‡∏≤‡∏ó*\n\n`;
        message += `üëâ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÄ‡∏•‡∏¢!`;

        // 4. ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°!
        await sendTelegramMessage(chatId, message);

        return NextResponse.json({ message: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!', orderId: newOrderRef.id }, { status: 201 });

    } catch (error) {
        console.error("Error creating order:", error);
        return NextResponse.json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå' }, { status: 500 });
    }
}
